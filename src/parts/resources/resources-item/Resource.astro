---
import BackButton from '@/components/Button/BackButton.astro';
import styles from './Resource.module.css';
import Grid from '@/components/Grid/Grid.astro';
import clsx from 'clsx'; 
import DownloadSVG from '@/components/svgs/download.astro';
import Button from '@/components/Button/Button.astro';
import Figure from '@/components/content/figure/Figure.astro';
import Quote from '@/components/content/quote/Quote.astro';
import Admonition from '@/components/content/admonition/Admonition.astro';
import InlinePromo from '@/components/content/inlinepromo/InlinePromo.astro';
import Icon from '@/components/icon/Icon.astro';
import Code from '@/components/content/code/Code.astro';
import Link from '@/components/Link/Link.astro';
import ModalTrigger from '@/components/modal-trigger/ModalTrigger.astro';

const {resource} = Astro.props;

if (!resource) {
	throw new Error("Resource not found");
}

const { Content } = await resource.render();
const { title, categories, featuredImage, downloadLink, coverImg, hubspotFormId, useHubspotEmbed, modalFormLinkText, modalFormId} = resource.data;
const decodedTitle = decodeURIComponent(title);
---

<div class={styles.resource}>
  <Grid>
    <div class={styles.container}>
      <div class={styles.sidebar}>
        <BackButton fallback="/resources" />
        {
          categories && (
            <div class={clsx(
              styles.tags, 
              'u-hidden--md'
            )}>
              <span class={styles.tag}>{categories}</span>
            </div>
          )
        }
        {
          featuredImage && (
            <div class={styles.image}>
              <img 
                src={typeof featuredImage === 'string' ? featuredImage : featuredImage.src} 
                alt={decodedTitle} 
              />
            </div>
          )
        }
        {
          downloadLink && hubspotFormId && (
            <ModalTrigger 
              linkText="Download" 
              formId={hubspotFormId} 
              portalId="146786678" 
              isDownloadBtn={true} 
              downloadLink={downloadLink} 
              useHubspotEmbed={useHubspotEmbed}
              size="lg"
             />
          )
        }
        {
          downloadLink && !hubspotFormId && (
            <Button 
              href={downloadLink} 
              rel="nofollow noreferrer" 
              target="_blank" 
              variant="primary"
					    size="lg"
              class={styles.download}
            >
              Download
              <DownloadSVG />
            </Button>
          )
        }
      </div>
      <div class={styles.inner}>
        <div class={styles.header}>
          {
						categories && (
							<div class={clsx(
                styles.tags,
                'u-hidden',
                'u-visible--md')}>
								<span class={styles.tag}>{categories}</span>
							</div>
						)
					}
          <h1 class={clsx(
            styles.title,
            'text__heading--4',
            'text__heading--2-lg',
            'text__heading--3-md'
          )}>
            {decodedTitle}
          </h1>
        </div>
        <div class={styles.content}>
          <Content
            components={{
              Quote,
              Admonition,
              Code,
              Icon,
              Figure,
              InlinePromo,
              img: Figure,
              a: Link,
            }}
           />
        </div>
        {
          modalFormLinkText && modalFormId && (
            <ModalTrigger 
              linkText={modalFormLinkText} 
              formId={modalFormId} 
              portalId="146786678" 
              useHubspotEmbed={useHubspotEmbed}
            />
          )
        }
      </div>
    </div>
  </Grid>
</div>