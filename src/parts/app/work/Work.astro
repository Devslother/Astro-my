---
import Grid from '../../../components/Grid/Grid.astro';
import styles from './Work.module.css';
import WorkCard from './WorkCard.astro';
import clsx from 'clsx';
import Icon1 from '../../../assets/app/work/card1/icon1.svg';
import Icon2 from '../../../assets/app/work/card1/icon2.svg';
import Icon3 from '../../../assets/app/work/card1/icon3.svg';
import Icon4 from '../../../assets/app/work/card2/icon4.svg';
import Icon5 from '../../../assets/app/work/card2/icon5.svg';
import Icon6 from '../../../assets/app/work/card2/icon6.svg';
import Icon7 from '../../../assets/app/work/card3/icon7.svg';
import Icon8 from '../../../assets/app/work/card3/icon8.svg';
import Icon9 from '../../../assets/app/work/card3/icon9.svg';
import imageMobile1 from '../../../assets/app/work/card1/card1-mobile.svg?url';
import imageTablet1 from '../../../assets/app/work/card1/card1-tablet.svg?url';
import imageDesktop1 from '../../../assets/app/work/card1/card1-desktop.svg?url';
import imageMobile2 from '../../../assets/app/work/card2/card2-mobile.svg?url';
import imageTablet2 from '../../../assets/app/work/card2/card2-tablet.svg?url';
import imageDesktop2 from '../../../assets/app/work/card2/card2-desktop.svg?url';
import imageMobile3 from '../../../assets/app/work/card3/card3-mobile.svg?url';
import imageTablet3 from '../../../assets/app/work/card3/card3-tablet.svg?url';
import imageDesktop3 from '../../../assets/app/work/card3/card3-desktop.svg?url';

const workNavigation = [
  {
    id: 1,
    image: {
    imageMobile: imageMobile1,
    imageTablet: imageTablet1,
    imageDesktop: imageDesktop1,
  },
    header: "Discover Services Everywhere, <br> Ingress Traffic Anywhere",
    description:
      "Multiple Kubernetes Clusters, VMs, Cloud APIs, on-prem or in the cloud.",
    items: [
      {
        icon: Icon1,
        title: "Global Service Registry",
        text: "Routability and visibility for endpoints across all deployments.",
      },
      {
        icon: Icon2,
        title: "Unified Routing Stack",
        text: "Envoys consistently route and secure traffic from edge to endpoint.",
      },
      {
        icon: Icon3,
        title: "Centralized Management",
        text: "Tetrate-hosted or self-managed management plane.",
      },
    ],
  },
  {
    id: 2,
    image: {
      imageMobile: imageMobile2,
      imageTablet: imageTablet2,
      imageDesktop: imageDesktop2,
    },
    header: "Coordinate Policies from Edge <br> to Endpoints Seamlessly",
    description:
      "Two-tier Envoy-based architecture with globally managed configuration that maximizes availability, security, and flexibility.",
    items: [
      {
        icon: Icon4,
        title: "Availability",
        text: "Dynamic failover by endpoint health, load, or custom weighting.",
      },
      {
        icon: Icon5,
        title: "Traffic Shaping",
        text: "Route by hostname, path, session, <br> or perform app canary.",
      },
      {
        icon: Icon6,
        title: "Security",
        text: "Consistent mTLS, JWT, OAuth2, rate limiting, validation, logging end-to-end.",
      },
    ],
  },
  {
    id: 3,
    image: {
      imageMobile: imageMobile3,
      imageTablet: imageTablet3,
      imageDesktop: imageDesktop3,
    },
    header: "Manage App Team Experience",
    description:
      "Top-down enforcement while enabling self-service to achieve productivity without sacrificing control.",
    items: [
      {
        icon: Icon7,
        title: "Intent-driven",
        text: "Easy integration with existing CI/CD tooling or UI.",
      },
      {
        icon: Icon8,
        title: "Self-service with Guardrails",
        text: "Built-in developer troubleshooting console protected with RBAC.",
      },
      {
        icon: Icon9,
        title: "Defaults & Mandates",
        text: "Configuration templates with customizable enforcement.",
      },
    ],
  },
];
---
<div class={styles.work}>
  <h5 class={clsx(
    'text__heading--h5',
    'text__heading--h2-lg',
    'text__heading--h4-md',
    styles.heading
  )}>
      Explore Tetrate 
      <br class="u-visible u-hidden--md u-hidden--lg" /> 
      Application Gateway
  </h5>
    
  <Grid>
    <div class={styles.card__container}>
      {workNavigation.map((card) => <WorkCard data={card} />)}
    </div>
  </Grid>
</div>	
    
  