---
export const prerender = false;

import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Hero from '../../parts/learn/hero/Hero.astro';
import List from '../../parts/learn/list/List.astro';
import Cta from '../../parts/learn/cta/Cta.astro';

const POSTS_PER_PAGE = 9;

export async function getStaticPaths() {
	const POSTS_PER_PAGE = 9;

	const articles = await getCollection("learn", ({ data }) => {
		return import.meta.env.PROD ? data.draft !== true : true;
	});

	const totalPages = Math.ceil((articles.length - 1) / POSTS_PER_PAGE);

	return Array.from({ length: totalPages }, (_, i) => ({
		params: { page: (i + 1).toString() },
	}));
}

const { page } = Astro.params;
const currentPage = parseInt(page);

const articles: CollectionEntry<"learn">[] = await getCollection("learn", ({ data }) => {
	return import.meta.env.PROD ? data.draft !== true : true;
});

const normalizeToArray = (field: unknown) => {
	if (!field) return [];
	return Array.isArray(field) ? field : [field];
};

const allCategories = [
	...new Set(articles.flatMap((resource) => normalizeToArray(resource.data.categories))),
];

const filteredArticles = articles.sort(
	(a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const paginatedArticles = filteredArticles.slice(startIndex, endIndex);
const totalPages = Math.ceil(filteredArticles.length / POSTS_PER_PAGE);

if (currentPage && currentPage === 1) {
	return Astro.redirect("/learn");
}
---

<Layout
	title="Learning Center"
	description="Tetrate's Learning Center: Discover expert insights, tutorials, and resources to elevate your understanding and implementation. Dive in now!"
	headerClass="nav__with__bg"
  bodyClass="learn-page"
>
	<Hero />
	<div data-articles-wrapper class="articles-wrapper">
		<List
			articles={paginatedArticles}
			totalPages={totalPages}
			currentPage={currentPage}
			allCategories={allCategories}
			noQuery={true} 
      hasResults={true}
		/>
	</div>
	<Cta />
</Layout>

