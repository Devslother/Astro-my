---
import { ClientRouter } from 'astro:transitions';
import Layout from '@/layouts/Layout.astro';
import Cta from '@/parts/learn/cta/Cta.astro';
import Hero from '@/parts/learn/hero/Hero.astro';
import List from '@/parts/learn/list/List.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

const ITEMS_PER_PAGE = 9;
const currentPage = 1;

const allArticles: CollectionEntry<"learn">[]  = (await getCollection("learn"))
.sort((a: CollectionEntry<"learn">, b: CollectionEntry<"learn">) => 
new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf());

const normalizeToArray = (field: unknown): string[] => {
	if (!field) return [];
	const value = Array.isArray(field) ? field.join(',') : field.toString();
	return value.split(',').map(c => c.trim()).filter(Boolean);
};

const allCategories = [
	...new Set(allArticles.flatMap((article) => normalizeToArray(article.data.categories))),
];

const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
const endIndex = startIndex + ITEMS_PER_PAGE;
const paginatedArticles = allArticles.slice(startIndex, endIndex);
const totalPages = Math.ceil(allArticles.length / ITEMS_PER_PAGE);
---
<Layout
  title="Learning Center"
	description="Tetrate's Learning Center: Discover expert insights, tutorials, and resources to elevate your understanding and implementation. Dive in now!"
	headerClass="nav__with__bg"
  bodyClass="learn-page"
>
  <Hero />
  <div data-articles-wrapper class="articles-wrapper">
    <List
      articles={paginatedArticles}
      totalPages={totalPages}
      currentPage={currentPage}
      allCategories={allCategories}
      currentCategory=""
      baseUrl="/learn"
      noQuery={true} 
      hasResults={true}
    />
  </div>
  <Cta />

  <Fragment slot="head">
    <ClientRouter />
  </Fragment>
</Layout>