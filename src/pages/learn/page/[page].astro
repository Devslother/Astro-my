---
import { getCollection, type CollectionEntry } from 'astro:content';
import { ClientRouter } from 'astro:transitions';
import Layout from '@/layouts/Layout.astro';
import Hero from '@/parts/learn/hero/Hero.astro';
import List from '@/parts/learn/list/List.astro';
import Cta from '@/parts/learn/cta/Cta.astro';

const POSTS_PER_PAGE = 9;

export const prerender = false;

const { page } = Astro.params;
const currentPage = parseInt(page || '1') || 1;

	const articles: CollectionEntry<"learn">[] = await getCollection("learn");

const normalizeToArray = (field: unknown): string[] => {
	if (!field) return [];
	const value = Array.isArray(field) ? field.join(',') : field.toString();
	return value.split(',').map(c => c.trim()).filter(Boolean);
};

const allCategories = [
	...new Set(articles.flatMap((resource) => normalizeToArray(resource.data.categories))),
];

const filteredArticles = articles.sort((a, b) => {
	const dateA = a.data.date ? new Date(a.data.date).valueOf() : 0;
	const dateB = b.data.date ? new Date(b.data.date).valueOf() : 0;
	return dateB - dateA;
});

const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;
const paginatedArticles = filteredArticles.slice(startIndex, endIndex);
const totalPages = Math.ceil(filteredArticles.length / POSTS_PER_PAGE);

if (currentPage && currentPage === 1) {
	return Astro.redirect("/learn");
}
---

<Layout
	title="Learning Center"
	description="Tetrate's Learning Center: Discover expert insights, tutorials, and resources to elevate your understanding and implementation. Dive in now!"
	headerClass="nav__with__bg"
>
	<Hero />
	<div data-articles-wrapper class="articles-wrapper">
		<List
			articles={paginatedArticles}
			totalPages={totalPages}
			currentPage={currentPage}
			allCategories={allCategories}
			currentCategory=""
			baseUrl="/learn"
			noQuery={true}
			hasResults={true}
		/>
	</div>
	<Cta />

	<Fragment slot="head">
		<ClientRouter />
	</Fragment>
</Layout>