---
import { ClientRouter } from 'astro:transitions';
import Layout from '@/layouts/Layout.astro';
import Cta from '@/parts/learn/cta/Cta.astro';
import Hero from '@/parts/resources/hero/Hero.astro';
import List from '@/parts/resources/list/List.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

const POSTS_PER_PAGE = 9;

// функция для генерации статических путей
export async function getStaticPaths() {
  // получаю все статьи для генерации на этапе сборки
  const resources: CollectionEntry<"resources">[] = await getCollection("resources", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  // определяю количество страниц
  const totalPages = Math.ceil((resources.length - 1) / POSTS_PER_PAGE);
// создаю массив страниц
  return Array.from({ length: totalPages }, (_, i) => ({
    params: { page: (i + 1).toString() },
  }));
}

// получаю текущую страницу из url
const { page } = Astro.params;
// преобразую строку в число
const currentPage = parseInt(page);

// получаю все статьи для отображения на текущей странице
const resources = await getCollection("resources", ({ data }) => {
	return import.meta.env.PROD ? data.draft !== true : true;
});

// сортирую статьи по дате
const sortedResources = resources.sort(
	(a, b) => (b.data.date?.valueOf() || 0) - (a.data.date?.valueOf() || 0)
);

// Сначала ищу статью с slug "teg-data-sheet"
const foundResource = resources.find(resource => resource.slug === "teg-data-sheet");

// Если нашла - использую ее, если нет - беру первую статью из массива
const featuredResource = foundResource ?? resources[0];

// вычисляю индексы статей начала и конца страницы
const startIndex = (currentPage - 1) * POSTS_PER_PAGE;
const endIndex = startIndex + POSTS_PER_PAGE;

// вырезаю статьи для отображения на текущей странице
const paginatedResources = sortedResources.slice(startIndex, endIndex);

// вычисляю количество страниц
const totalPages = Math.ceil(sortedResources.length / POSTS_PER_PAGE);

// перенаправляю на главную страницу если текущая страница 1
if (currentPage && currentPage === 1) {
	return Astro.redirect("/resources");
}
---

<Layout
	title="Resources"
	description="Browse articles, guides, and more"
	headerClass="nav__with__bg"
	bodyClass="resources-page"
>
  <Hero featuredResource={featuredResource} />
  <div data-resources-wrapper class="resources-wrapper">
    <List 
      resources={paginatedResources}
      totalPages={totalPages}
      currentPage={currentPage}
      baseUrl='/resources'
     />
  </div>
  <Cta />

  <Fragment slot="head">
    <ClientRouter />
  </Fragment>
</Layout>
